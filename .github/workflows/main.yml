name: Build Module

on:
  push:
    branches:
    - main
    paths:
      module.prop
  workflow_dispatch:

jobs:
  build:
    name: Upload Asset
    runs-on: ubuntu-latest
    steps:
          
      - name: Checkout Repo
        uses: actions/checkout@v2
        
      - name: Download latest Bromite
        id: mDownload
        run: wget https://github.com/bromite/bromite/releases/latest/download/arm64_SystemWebView.apk && mv arm64_SystemWebView.apk system/app/
        
        
      - name: Get Version
        id: mVersion
        run: curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/bromite/bromite/releases/latest && echo


      - name: Get Id
        id: mId
        run: curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/bromite/bromite/releases/latest | cut -f2 -d"."| sed 's/.*\///' && echo
        

      - name: Build project
        run: zip -r "${{ steps.mId.outputs.id }}.${{ steps.mVersion.outputs.version }}.zip" . -x "README.md" ".git/*" ".github/*" "docs/*" 

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          tag_name: ${{ steps.mVersion.outputs.version }}
          release_name: Release ${{ steps.mVersion.outputs.version }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.mId.outputs.id }}.${{ steps.mVersion.outputs.version }}.zip
          asset_name: ${{ steps.mId.outputs.id }}.${{ steps.mVersion.outputs.version }}.zip
          asset_content_type: application/zip
